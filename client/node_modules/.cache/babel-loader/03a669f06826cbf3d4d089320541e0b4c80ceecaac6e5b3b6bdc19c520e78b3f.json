{"ast":null,"code":"var _jsxFileName = \"H:\\\\D\\xE9velopeur WEB\\\\Projet 7 (4eme en vrais) API REST\\\\api-rest - Copie (5)\\\\client\\\\src\\\\components\\\\CurveNeonCursor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CurveNeonCursor = () => {\n  _s();\n  const curveRef = useRef();\n  const pointsRef = useRef([]);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const handleMouseMove = e => {\n      setMousePosition({\n        x: e.clientX,\n        y: e.clientY\n      });\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n  useFrame(() => {\n    if (curveRef.current && pointsRef.current.length > 0) {\n      const lastPoint = pointsRef.current[pointsRef.current.length - 1];\n      lastPoint.x = mousePosition.x / window.innerWidth * 2 - 1;\n      lastPoint.y = -(mousePosition.y / window.innerHeight) * 2 + 1;\n      curveRef.current.needsUpdate = true;\n    }\n  });\n\n  // Ajouter un nouveau point à la courbe toutes les 50 ms\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (pointsRef.current.length < 50) {\n        const point = new THREE.Vector2();\n        pointsRef.current.push(point);\n        curveRef.current.getPoints().push(point);\n        curveRef.current.needsUpdate = true;\n      }\n    }, 50);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"curve\", {\n      ref: curveRef,\n      children: /*#__PURE__*/_jsxDEV(\"catmullRomCurve3\", {\n        points: pointsRef.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tubeGeometry\", {\n      attach: \"geometry\",\n      args: [curveRef.current, 64, 1, false]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      attach: \"material\",\n      color: new THREE.Color(0x00ffff),\n      transparent: true,\n      opacity: 0.7,\n      side: THREE.DoubleSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CurveNeonCursor, \"nJ0uuIaQhJMdSyId5qOaVDEzu1Y=\", false, function () {\n  return [useFrame];\n});\n_c = CurveNeonCursor;\nexport default CurveNeonCursor;\nvar _c;\n$RefreshReg$(_c, \"CurveNeonCursor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useFrame","THREE","jsxDEV","_jsxDEV","Fragment","_Fragment","CurveNeonCursor","_s","curveRef","pointsRef","mousePosition","setMousePosition","x","y","handleMouseMove","e","clientX","clientY","window","addEventListener","removeEventListener","current","length","lastPoint","innerWidth","innerHeight","needsUpdate","timer","setInterval","point","Vector2","push","getPoints","clearInterval","children","ref","points","fileName","_jsxFileName","lineNumber","columnNumber","attach","args","color","Color","transparent","opacity","side","DoubleSide","_c","$RefreshReg$"],"sources":["H:/Dévelopeur WEB/Projet 7 (4eme en vrais) API REST/api-rest - Copie (5)/client/src/components/CurveNeonCursor.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { useFrame } from 'react-three-fiber';\r\nimport * as THREE from 'three';\r\n\r\nconst CurveNeonCursor = () => {\r\n  const curveRef = useRef();\r\n  const pointsRef = useRef([]);\r\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      setMousePosition({ x: e.clientX, y: e.clientY });\r\n    };\r\n\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n    };\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    if (curveRef.current && pointsRef.current.length > 0) {\r\n      const lastPoint = pointsRef.current[pointsRef.current.length - 1];\r\n      lastPoint.x = (mousePosition.x / window.innerWidth) * 2 - 1;\r\n      lastPoint.y = -(mousePosition.y / window.innerHeight) * 2 + 1;\r\n      curveRef.current.needsUpdate = true;\r\n    }\r\n  });\r\n\r\n  // Ajouter un nouveau point à la courbe toutes les 50 ms\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (pointsRef.current.length < 50) {\r\n        const point = new THREE.Vector2();\r\n        pointsRef.current.push(point);\r\n        curveRef.current.getPoints().push(point);\r\n        curveRef.current.needsUpdate = true;\r\n      }\r\n    }, 50);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <curve ref={curveRef}>\r\n        <catmullRomCurve3 points={pointsRef.current} />\r\n      </curve>\r\n      <tubeGeometry attach=\"geometry\" args={[curveRef.current, 64, 1, false]} />\r\n      <meshBasicMaterial\r\n        attach=\"material\"\r\n        color={new THREE.Color(0x00ffff)}\r\n        transparent\r\n        opacity={0.7}\r\n        side={THREE.DoubleSide}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurveNeonCursor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}