{"ast":null,"code":"var _jsxFileName = \"H:\\\\D\\xE9velopeur WEB\\\\Projet 7 (4eme en vrais) API REST\\\\api-rest - Copie (7) - Copie\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Importation des hooks React pour gérer l'état et les effets secondaires\nimport axios from 'axios'; // Importation de la bibliothèque Axios pour effectuer des requêtes HTTP\nimport UserForm from './components/UserForm'; // Importation du composant pour ajouter un utilisateur\nimport UserEdit from './components/UserEdit'; // Importation du composant pour éditer un utilisateur\nimport UserList from './components/UserList'; // Importation du composant pour afficher la liste des utilisateurs\nimport exampleVideo from './assets/videos/example2.mp4'; // Importation d'une vidéo d'exemple pour l'arrière-plan\nimport Serpentin from './components/Serpentin'; // Importation du composant Serpentin\nimport './theme.css'; // Importation des styles thématiques supplémentaires\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // État pour stocker les utilisateurs\n  const [users, setUsers] = useState([]);\n  // État pour stocker l'utilisateur sélectionné pour modification\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Effet secondaire pour récupérer les utilisateurs lors du premier rendu du composant\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        // Requête GET pour récupérer tous les utilisateurs\n        const response = await axios.get('http://localhost:5000/api/users');\n        setUsers(response.data); // Mise à jour de l'état avec les utilisateurs récupérés\n      } catch (error) {\n        console.error('Error fetching users:', error); // Gestion des erreurs\n      }\n    };\n    fetchUsers(); // Appel de la fonction pour récupérer les utilisateurs\n  }, []); // Tableau de dépendances vide, l'effet s'exécute uniquement au premier rendu\n\n  // Fonction pour ajouter un nouvel utilisateur\n  const addUser = async user => {\n    try {\n      // Requête POST pour ajouter un utilisateur\n      const response = await axios.post('http://localhost:5000/api/users', user);\n      setUsers([...users, response.data]); // Mise à jour de l'état avec le nouvel utilisateur ajouté\n    } catch (error) {\n      console.error('Error adding user:', error); // Gestion des erreurs\n    }\n  };\n\n  // Fonction pour mettre à jour un utilisateur existant\n  const updateUser = async updatedUser => {\n    try {\n      // Requête PUT pour mettre à jour un utilisateur par son ID\n      const response = await axios.put(`http://localhost:5000/api/users/${updatedUser._id}`, updatedUser);\n      // Mise à jour de l'état avec l'utilisateur modifié\n      setUsers(users.map(user => user._id === updatedUser._id ? response.data : user));\n      setSelectedUser(null); // Réinitialisation de l'utilisateur sélectionné\n    } catch (error) {\n      console.error('Error updating user:', error); // Gestion des erreurs\n    }\n  };\n\n  // Fonction pour supprimer un utilisateur\n  const deleteUser = async id => {\n    try {\n      // Requête DELETE pour supprimer un utilisateur par son ID\n      await axios.delete(`http://localhost:5000/api/users/${id}`);\n      // Mise à jour de l'état en filtrant l'utilisateur supprimé\n      setUsers(users.filter(user => user._id !== id));\n    } catch (error) {\n      console.error('Error deleting user:', error); // Gestion des erreurs\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Serpentin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      className: \"background-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: exampleVideo,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), \"Votre navigateur ne supporte pas la balise vid\\xE9o.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(UserForm, {\n        addUser: addUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), \" \", selectedUser && /*#__PURE__*/_jsxDEV(UserEdit, {\n        user: selectedUser,\n        onUpdate: updateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        users: users,\n        editUser: id => {\n          const user = users.find(user => user._id === id);\n          setSelectedUser(user); // Sélectionne un utilisateur pour modification\n        },\n        deleteUser: deleteUser // Fonction pour supprimer un utilisateur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"aU/UUDZLN6ztfpIOEYlZQ+VCkZM=\");\n_c = App;\nexport default App; // Exportation du composant principal de l'application\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","UserForm","UserEdit","UserList","exampleVideo","Serpentin","jsxDEV","_jsxDEV","App","_s","users","setUsers","selectedUser","setSelectedUser","fetchUsers","response","get","data","error","console","addUser","user","post","updateUser","updatedUser","put","_id","map","deleteUser","id","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","autoPlay","loop","muted","src","type","onUpdate","editUser","find","_c","$RefreshReg$"],"sources":["H:/Dévelopeur WEB/Projet 7 (4eme en vrais) API REST/api-rest - Copie (7) - Copie/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Importation des hooks React pour gérer l'état et les effets secondaires\nimport axios from 'axios'; // Importation de la bibliothèque Axios pour effectuer des requêtes HTTP\nimport UserForm from './components/UserForm'; // Importation du composant pour ajouter un utilisateur\nimport UserEdit from './components/UserEdit'; // Importation du composant pour éditer un utilisateur\nimport UserList from './components/UserList'; // Importation du composant pour afficher la liste des utilisateurs\nimport exampleVideo from './assets/videos/example2.mp4'; // Importation d'une vidéo d'exemple pour l'arrière-plan\nimport Serpentin from './components/Serpentin'; // Importation du composant Serpentin\nimport './theme.css'; // Importation des styles thématiques supplémentaires\n\nconst App = () => {\n    // État pour stocker les utilisateurs\n    const [users, setUsers] = useState([]);\n    // État pour stocker l'utilisateur sélectionné pour modification\n    const [selectedUser, setSelectedUser] = useState(null);\n\n    // Effet secondaire pour récupérer les utilisateurs lors du premier rendu du composant\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                // Requête GET pour récupérer tous les utilisateurs\n                const response = await axios.get('http://localhost:5000/api/users');\n                setUsers(response.data); // Mise à jour de l'état avec les utilisateurs récupérés\n            } catch (error) {\n                console.error('Error fetching users:', error); // Gestion des erreurs\n            }\n        };\n        fetchUsers(); // Appel de la fonction pour récupérer les utilisateurs\n    }, []); // Tableau de dépendances vide, l'effet s'exécute uniquement au premier rendu\n\n    // Fonction pour ajouter un nouvel utilisateur\n    const addUser = async (user) => {\n        try {\n            // Requête POST pour ajouter un utilisateur\n            const response = await axios.post('http://localhost:5000/api/users', user);\n            setUsers([...users, response.data]); // Mise à jour de l'état avec le nouvel utilisateur ajouté\n        } catch (error) {\n            console.error('Error adding user:', error); // Gestion des erreurs\n        }\n    };\n\n    // Fonction pour mettre à jour un utilisateur existant\n    const updateUser = async (updatedUser) => {\n        try {\n            // Requête PUT pour mettre à jour un utilisateur par son ID\n            const response = await axios.put(`http://localhost:5000/api/users/${updatedUser._id}`, updatedUser);\n            // Mise à jour de l'état avec l'utilisateur modifié\n            setUsers(users.map(user => (user._id === updatedUser._id ? response.data : user)));\n            setSelectedUser(null); // Réinitialisation de l'utilisateur sélectionné\n        } catch (error) {\n            console.error('Error updating user:', error); // Gestion des erreurs\n        }\n    };\n\n    // Fonction pour supprimer un utilisateur\n    const deleteUser = async (id) => {\n        try {\n            // Requête DELETE pour supprimer un utilisateur par son ID\n            await axios.delete(`http://localhost:5000/api/users/${id}`);\n            // Mise à jour de l'état en filtrant l'utilisateur supprimé\n            setUsers(users.filter(user => user._id !== id));\n        } catch (error) {\n            console.error('Error deleting user:', error); // Gestion des erreurs\n        }\n    };\n\n    return (\n        <div id=\"app\" className=\"app\">\n            <Serpentin /> {/* Ajout du composant Serpentin */}\n            <video autoPlay loop muted className=\"background-video\">\n                <source src={exampleVideo} type=\"video/mp4\" />\n                Votre navigateur ne supporte pas la balise vidéo.\n            </video>\n            <div className=\"content\">\n                <UserForm addUser={addUser} /> {/* Composant pour ajouter un utilisateur */}\n                {selectedUser && (\n                    <UserEdit\n                        user={selectedUser}\n                        onUpdate={updateUser}\n                    />\n                )}\n                <UserList\n                    users={users}\n                    editUser={(id) => {\n                        const user = users.find(user => user._id === id);\n                        setSelectedUser(user); // Sélectionne un utilisateur pour modification\n                    }}\n                    deleteUser={deleteUser} // Fonction pour supprimer un utilisateur\n                /> {/* Composant pour afficher la liste des utilisateurs */}\n            </div>\n        </div>\n    );\n};\n\nexport default App; // Exportation du composant principal de l'application\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}