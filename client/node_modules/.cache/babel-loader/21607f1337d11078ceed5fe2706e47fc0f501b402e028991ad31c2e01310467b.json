{"ast":null,"code":"import React,{useState,useEffect}from'react';// Importation des hooks React pour gérer l'état et les effets secondaires\nimport axios from'axios';// Importation de la bibliothèque Axios pour effectuer des requêtes HTTP\nimport UserForm from'./components/UserForm';// Importation du composant pour ajouter un utilisateur\nimport UserEdit from'./components/UserEdit';// Importation du composant pour éditer un utilisateur\nimport UserList from'./components/UserList';// Importation du composant pour afficher la liste des utilisateurs\nimport exampleVideo from'./assets/videos/example2.mp4';// Importation d'une vidéo d'exemple pour l'arrière-plan\nimport Serpentin from'./components/Serpentin';// Importation du composant Serpentin\nimport'./theme.css';// Importation des styles thématiques supplémentaires\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{// État pour stocker les utilisateurs\nconst[users,setUsers]=useState([]);// État pour stocker l'utilisateur sélectionné pour modification\nconst[selectedUser,setSelectedUser]=useState(null);// Effet secondaire pour récupérer les utilisateurs lors du premier rendu du composant\nuseEffect(()=>{const fetchUsers=async()=>{try{// Requête GET pour récupérer tous les utilisateurs\nconst response=await axios.get('http://localhost:5000/api/users');setUsers(response.data);// Mise à jour de l'état avec les utilisateurs récupérés\n}catch(error){console.error('Error fetching users:',error);// Gestion des erreurs\n}};fetchUsers();// Appel de la fonction pour récupérer les utilisateurs\n},[]);// Tableau de dépendances vide, l'effet s'exécute uniquement au premier rendu\n// Fonction pour ajouter un nouvel utilisateur\nconst addUser=async user=>{try{// Requête POST pour ajouter un utilisateur\nconst response=await axios.post('http://localhost:5000/api/users',user);setUsers([...users,response.data]);// Mise à jour de l'état avec le nouvel utilisateur ajouté\n}catch(error){console.error('Error adding user:',error);// Gestion des erreurs\n}};// Fonction pour mettre à jour un utilisateur existant\nconst updateUser=async updatedUser=>{try{// Requête PUT pour mettre à jour un utilisateur par son ID\nconst response=await axios.put(\"http://localhost:5000/api/users/\".concat(updatedUser._id),updatedUser);// Mise à jour de l'état avec l'utilisateur modifié\nsetUsers(users.map(user=>user._id===updatedUser._id?response.data:user));setSelectedUser(null);// Réinitialisation de l'utilisateur sélectionné\n}catch(error){console.error('Error updating user:',error);// Gestion des erreurs\n}};// Fonction pour supprimer un utilisateur\nconst deleteUser=async id=>{try{// Requête DELETE pour supprimer un utilisateur par son ID\nawait axios.delete(\"http://localhost:5000/api/users/\".concat(id));// Mise à jour de l'état en filtrant l'utilisateur supprimé\nsetUsers(users.filter(user=>user._id!==id));}catch(error){console.error('Error deleting user:',error);// Gestion des erreurs\n}};return/*#__PURE__*/_jsxs(\"div\",{id:\"app\",className:\"app\",children:[/*#__PURE__*/_jsx(Serpentin,{}),\" \",/*#__PURE__*/_jsxs(\"video\",{autoPlay:true,loop:true,muted:true,className:\"background-video\",children:[/*#__PURE__*/_jsx(\"source\",{src:exampleVideo,type:\"video/mp4\"}),\"Votre navigateur ne supporte pas la balise vid\\xE9o.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(UserForm,{addUser:addUser}),\" \",selectedUser&&/*#__PURE__*/_jsx(UserEdit,{user:selectedUser,onUpdate:updateUser}),/*#__PURE__*/_jsx(UserList,{users:users,editUser:id=>{const user=users.find(user=>user._id===id);setSelectedUser(user);// Sélectionne un utilisateur pour modification\n},deleteUser:deleteUser// Fonction pour supprimer un utilisateur\n}),\" \"]})]});};export default App;// Exportation du composant principal de l'application","map":{"version":3,"names":["React","useState","useEffect","axios","UserForm","UserEdit","UserList","exampleVideo","Serpentin","jsx","_jsx","jsxs","_jsxs","App","users","setUsers","selectedUser","setSelectedUser","fetchUsers","response","get","data","error","console","addUser","user","post","updateUser","updatedUser","put","concat","_id","map","deleteUser","id","delete","filter","className","children","autoPlay","loop","muted","src","type","onUpdate","editUser","find"],"sources":["H:/Dévelopeur WEB/Projet 7 (4eme en vrais) API REST/api-rest deployement/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Importation des hooks React pour gérer l'état et les effets secondaires\nimport axios from 'axios'; // Importation de la bibliothèque Axios pour effectuer des requêtes HTTP\nimport UserForm from './components/UserForm'; // Importation du composant pour ajouter un utilisateur\nimport UserEdit from './components/UserEdit'; // Importation du composant pour éditer un utilisateur\nimport UserList from './components/UserList'; // Importation du composant pour afficher la liste des utilisateurs\nimport exampleVideo from './assets/videos/example2.mp4'; // Importation d'une vidéo d'exemple pour l'arrière-plan\nimport Serpentin from './components/Serpentin'; // Importation du composant Serpentin\nimport './theme.css'; // Importation des styles thématiques supplémentaires\n\nconst App = () => {\n    // État pour stocker les utilisateurs\n    const [users, setUsers] = useState([]);\n    // État pour stocker l'utilisateur sélectionné pour modification\n    const [selectedUser, setSelectedUser] = useState(null);\n\n    // Effet secondaire pour récupérer les utilisateurs lors du premier rendu du composant\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                // Requête GET pour récupérer tous les utilisateurs\n                const response = await axios.get('http://localhost:5000/api/users');\n                setUsers(response.data); // Mise à jour de l'état avec les utilisateurs récupérés\n            } catch (error) {\n                console.error('Error fetching users:', error); // Gestion des erreurs\n            }\n        };\n        fetchUsers(); // Appel de la fonction pour récupérer les utilisateurs\n    }, []); // Tableau de dépendances vide, l'effet s'exécute uniquement au premier rendu\n\n    // Fonction pour ajouter un nouvel utilisateur\n    const addUser = async (user) => {\n        try {\n            // Requête POST pour ajouter un utilisateur\n            const response = await axios.post('http://localhost:5000/api/users', user);\n            setUsers([...users, response.data]); // Mise à jour de l'état avec le nouvel utilisateur ajouté\n        } catch (error) {\n            console.error('Error adding user:', error); // Gestion des erreurs\n        }\n    };\n\n    // Fonction pour mettre à jour un utilisateur existant\n    const updateUser = async (updatedUser) => {\n        try {\n            // Requête PUT pour mettre à jour un utilisateur par son ID\n            const response = await axios.put(`http://localhost:5000/api/users/${updatedUser._id}`, updatedUser);\n            // Mise à jour de l'état avec l'utilisateur modifié\n            setUsers(users.map(user => (user._id === updatedUser._id ? response.data : user)));\n            setSelectedUser(null); // Réinitialisation de l'utilisateur sélectionné\n        } catch (error) {\n            console.error('Error updating user:', error); // Gestion des erreurs\n        }\n    };\n\n    // Fonction pour supprimer un utilisateur\n    const deleteUser = async (id) => {\n        try {\n            // Requête DELETE pour supprimer un utilisateur par son ID\n            await axios.delete(`http://localhost:5000/api/users/${id}`);\n            // Mise à jour de l'état en filtrant l'utilisateur supprimé\n            setUsers(users.filter(user => user._id !== id));\n        } catch (error) {\n            console.error('Error deleting user:', error); // Gestion des erreurs\n        }\n    };\n\n    return (\n        <div id=\"app\" className=\"app\">\n            <Serpentin /> {/* Ajout du composant Serpentin */}\n            <video autoPlay loop muted className=\"background-video\">\n                <source src={exampleVideo} type=\"video/mp4\" />\n                Votre navigateur ne supporte pas la balise vidéo.\n            </video>\n            <div className=\"content\">\n                <UserForm addUser={addUser} /> {/* Composant pour ajouter un utilisateur */}\n                {selectedUser && (\n                    <UserEdit\n                        user={selectedUser}\n                        onUpdate={updateUser}\n                    />\n                )}\n                <UserList\n                    users={users}\n                    editUser={(id) => {\n                        const user = users.find(user => user._id === id);\n                        setSelectedUser(user); // Sélectionne un utilisateur pour modification\n                    }}\n                    deleteUser={deleteUser} // Fonction pour supprimer un utilisateur\n                /> {/* Composant pour afficher la liste des utilisateurs */}\n            </div>\n        </div>\n    );\n};\n\nexport default App; // Exportation du composant principal de l'application\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}