{"ast":null,"code":"import React,{useRef,useEffect,useState}from'react';import'./Serpentin.css';// Assurez-vous que le CSS est importé\nimport{jsx as _jsx}from\"react/jsx-runtime\";const Serpentin=()=>{const canvasRef=useRef(null);const[pointerEvents,setPointerEvents]=useState('none');const[positions,setPositions]=useState([]);useEffect(()=>{const canvas=canvasRef.current;const ctx=canvas.getContext('2d');const resizeCanvas=()=>{if(canvas){canvas.width=window.innerWidth;canvas.height=window.innerHeight;}};const drawSerpentin=()=>{if(!ctx)return;ctx.clearRect(0,0,canvas.width,canvas.height);ctx.strokeStyle='#9B7EDA';// Jaune doré\nctx.lineWidth=4;ctx.beginPath();// Dessine la ligne serpentine\npositions.forEach((_ref,index)=>{let[x,y]=_ref;if(index===0){ctx.moveTo(x,y);}else{ctx.lineTo(x,y);}});ctx.stroke();};const handleMouseMove=event=>{const x=event.clientX;const y=event.clientY;// Ajoute la position actuelle à la liste\nsetPositions(prevPositions=>[...prevPositions,[x,y]]);// Limite le nombre de points pour éviter que le tableau devienne trop grand\nif(positions.length>5){setPositions(prevPositions=>prevPositions.slice(1));}};const handleMouseEnter=()=>setPointerEvents('auto');const handleMouseLeave=()=>setPointerEvents('none');const animate=()=>{drawSerpentin();requestAnimationFrame(animate);};// Resize canvas when window resizes\nwindow.addEventListener('resize',resizeCanvas);resizeCanvas();// Initial resize\ndocument.addEventListener('mousemove',handleMouseMove);document.addEventListener('mouseenter',handleMouseEnter);document.addEventListener('mouseleave',handleMouseLeave);// Start animation loop\nanimate();return()=>{window.removeEventListener('resize',resizeCanvas);document.removeEventListener('mousemove',handleMouseMove);document.removeEventListener('mouseenter',handleMouseEnter);document.removeEventListener('mouseleave',handleMouseLeave);};},[positions,pointerEvents]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:\"serpentin-canvas\",style:{pointerEvents}});};export default Serpentin;","map":{"version":3,"names":["React","useRef","useEffect","useState","jsx","_jsx","Serpentin","canvasRef","pointerEvents","setPointerEvents","positions","setPositions","canvas","current","ctx","getContext","resizeCanvas","width","window","innerWidth","height","innerHeight","drawSerpentin","clearRect","strokeStyle","lineWidth","beginPath","forEach","_ref","index","x","y","moveTo","lineTo","stroke","handleMouseMove","event","clientX","clientY","prevPositions","length","slice","handleMouseEnter","handleMouseLeave","animate","requestAnimationFrame","addEventListener","document","removeEventListener","ref","className","style"],"sources":["H:/Dévelopeur WEB/Projet 7 (4eme en vrais) API REST/api-rest deployement/client/src/components/Serpentin.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport './Serpentin.css'; // Assurez-vous que le CSS est importé\r\n\r\nconst Serpentin = () => {\r\n  const canvasRef = useRef(null);\r\n  const [pointerEvents, setPointerEvents] = useState('none');\r\n  const [positions, setPositions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    const resizeCanvas = () => {\r\n      if (canvas) {\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n      }\r\n    };\r\n\r\n    const drawSerpentin = () => {\r\n      if (!ctx) return;\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.strokeStyle = '#9B7EDA'; // Jaune doré\r\n      ctx.lineWidth = 4;\r\n      ctx.beginPath();\r\n      \r\n      // Dessine la ligne serpentine\r\n      positions.forEach(([x, y], index) => {\r\n        if (index === 0) {\r\n          ctx.moveTo(x, y);\r\n        } else {\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      \r\n      ctx.stroke();\r\n    };\r\n\r\n    const handleMouseMove = (event) => {\r\n      const x = event.clientX;\r\n      const y = event.clientY;\r\n\r\n      // Ajoute la position actuelle à la liste\r\n      setPositions(prevPositions => [...prevPositions, [x, y]]);\r\n\r\n      // Limite le nombre de points pour éviter que le tableau devienne trop grand\r\n      if (positions.length > 5) {\r\n        setPositions(prevPositions => prevPositions.slice(1));\r\n      }\r\n    };\r\n\r\n    const handleMouseEnter = () => setPointerEvents('auto');\r\n    const handleMouseLeave = () => setPointerEvents('none');\r\n\r\n    const animate = () => {\r\n      drawSerpentin();\r\n      requestAnimationFrame(animate);\r\n    };\r\n\r\n    // Resize canvas when window resizes\r\n    window.addEventListener('resize', resizeCanvas);\r\n    resizeCanvas(); // Initial resize\r\n\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseenter', handleMouseEnter);\r\n    document.addEventListener('mouseleave', handleMouseLeave);\r\n\r\n    // Start animation loop\r\n    animate();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeCanvas);\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseenter', handleMouseEnter);\r\n      document.removeEventListener('mouseleave', handleMouseLeave);\r\n    };\r\n  }, [positions, pointerEvents]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className=\"serpentin-canvas\"\r\n      style={{ pointerEvents }}\r\n    ></canvas>\r\n  );\r\n};\r\n\r\nexport default Serpentin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}