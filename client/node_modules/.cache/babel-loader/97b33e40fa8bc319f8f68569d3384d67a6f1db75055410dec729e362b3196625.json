{"ast":null,"code":"var _jsxFileName = \"H:\\\\D\\xE9velopeur WEB\\\\Projet 7 (4eme en vrais) API REST\\\\api-rest - Copie (7) - Copie\\\\client\\\\src\\\\components\\\\UserEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Importation de React, du hook useState pour gérer l'état local, et useEffect pour les effets secondaires\n/* import axios from 'axios'; // Importation d'axios pour les requêtes HTTP */\n\n// Composant UserEdit pour éditer les détails d'un utilisateur\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserEdit = ({\n  user,\n  onUpdate\n}) => {\n  _s();\n  // États locaux pour stocker les valeurs du nom et de l'email\n  const [name, setName] = useState(user.name);\n  const [email, setEmail] = useState(user.email);\n\n  // Effet secondaire pour mettre à jour les champs lorsque l'utilisateur change\n  useEffect(() => {\n    setName(user.name); // Met à jour le nom lorsque le prop user change\n    setEmail(user.email); // Met à jour l'email lorsque le prop user change\n  }, [user]);\n\n  // Fonction pour gérer la mise à jour de l'utilisateur\n  const handleEdit = async () => {\n    try {\n      const updatedUser = {\n        ...user,\n        name,\n        email\n      }; // Crée un objet utilisateur mis à jour avec les nouvelles valeurs\n      await onUpdate(updatedUser); // Appelle la fonction onUpdate passée en prop avec l'utilisateur mis à jour\n    } catch (error) {\n      console.error('Error updating user:', error); // Affiche une erreur si la mise à jour échoue\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEdit,\n      className: \"btn btn-primary\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(UserEdit, \"4wwGQ9QA8Lc6jI+45WRbxORYW2I=\");\n_c = UserEdit;\nexport default UserEdit; // Exportation du composant UserEdit pour l'utiliser dans d'autres parties de l'application\nvar _c;\n$RefreshReg$(_c, \"UserEdit\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserEdit","user","onUpdate","_s","name","setName","email","setEmail","handleEdit","updatedUser","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["H:/Dévelopeur WEB/Projet 7 (4eme en vrais) API REST/api-rest - Copie (7) - Copie/client/src/components/UserEdit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Importation de React, du hook useState pour gérer l'état local, et useEffect pour les effets secondaires\r\n/* import axios from 'axios'; // Importation d'axios pour les requêtes HTTP */\r\n\r\n// Composant UserEdit pour éditer les détails d'un utilisateur\r\nconst UserEdit = ({ user, onUpdate }) => {\r\n    // États locaux pour stocker les valeurs du nom et de l'email\r\n    const [name, setName] = useState(user.name);\r\n    const [email, setEmail] = useState(user.email);\r\n\r\n    // Effet secondaire pour mettre à jour les champs lorsque l'utilisateur change\r\n    useEffect(() => {\r\n        setName(user.name); // Met à jour le nom lorsque le prop user change\r\n        setEmail(user.email); // Met à jour l'email lorsque le prop user change\r\n    }, [user]);\r\n\r\n    // Fonction pour gérer la mise à jour de l'utilisateur\r\n    const handleEdit = async () => {\r\n        try {\r\n            const updatedUser = { ...user, name, email }; // Crée un objet utilisateur mis à jour avec les nouvelles valeurs\r\n            await onUpdate(updatedUser); // Appelle la fonction onUpdate passée en prop avec l'utilisateur mis à jour\r\n        } catch (error) {\r\n            console.error('Error updating user:', error); // Affiche une erreur si la mise à jour échoue\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Edit User</h2> {/* Titre pour la section d'édition */}\r\n            <div className=\"form-group\"> {/* Groupe de champs pour le nom */}\r\n                <label>Name</label> {/* Étiquette pour le champ du nom */}\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required\r\n                /> {/* Champ de texte pour le nom */}\r\n            </div>\r\n            <div className=\"form-group\"> {/* Groupe de champs pour l'email */}\r\n                <label>Email</label> {/* Étiquette pour le champ de l'email */}\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                /> {/* Champ de texte pour l'email */}\r\n            </div>\r\n            <button onClick={handleEdit} className=\"btn btn-primary\">Save</button> {/* Bouton pour enregistrer les modifications */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserEdit; // Exportation du composant UserEdit pour l'utiliser dans d'autres parties de l'application\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}